version: '3.9'
services:
  prometheus:
    container_name: prometheus
    environment:
      - PROMETHEUS_CONTAINER_NAME=prometheus
      - PROMETHEUS_CONTAINER_PORT=${PROMETHEUS_CONTAINER_PORT}

      - CADVISOR_CONTAINER_NAME=cadvisor
      - CADVISOR_CONTAINER_PORT=${CADVISOR_CONTAINER_PORT}

      - NODE_EXPORTER_CONTAINER_NAME=node-exporter
      - NODE_EXPORTER_CONTAINER_PORT=${NODE_EXPORTER_CONTAINER_PORT}

      - MINECRAFT_CONTAINER_NAME=production_minecraft_server
      - MINECRAFT_CONTAINER_PORT=${MINECRAFT_CONTAINER_PORT}

      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    build:
      context: "./prometheus"
      dockerfile: "Dockerfile"
    ports:
      - ${PROMETHEUS_HOST_PORT}:${PROMETHEUS_CONTAINER_PORT}
    volumes:
      - ./prometheus/template/prometheus.yml.template:/template/prometheus.yml.template
      - ./prometheus/data:/prometheus/
    command:
      - /bin/sh
      - -c
      - |
        envsubst < /template/prometheus.yml.template > /etc/prometheus/prometheus.yml
        /bin/prometheus \
        --config.file=/etc/prometheus/prometheus.yml \
        --storage.tsdb.path=/prometheus
    restart: always
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    networks:
      - docker_network

  node-exporter:
    container_name: node-exporter
    environment:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    image: prom/node-exporter:v1.3.1
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    ports:
      - ${NODE_EXPORTER_HOST_PORT}:${NODE_EXPORTER_CONTAINER_PORT}
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    restart: always
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    networks:
      - docker_network

  grafana:
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - DS_PROMETHEUS=Prometheus
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    image: grafana/grafana:7.5.16
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/lib/grafana:/var/lib/grafana
    ports:
      - ${GRAFANA_HOST_PORT}:${GRAFANA_CONTAINER_PORT}
    restart: always
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    networks:
      - docker_network

  cadvisor:
    container_name: cadvisor
    image: dairin007/cadvisor_arm:v0.44.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
    environment:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    ports:
      - ${CADVISOR_HOST_PORT}:${CADVISOR_CONTAINER_PORT}
    command:
      - '-port=${CADVISOR_CONTAINER_PORT}'
      - '--allow_dynamic_housekeeping=true'
      - '--housekeeping_interval=30s'
      - '--docker_only=true'
      - '--storage_duration=3m0s'
      - '--global_housekeeping_interval=30s'
      - '--store_container_labels=false'
    restart: always
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    networks:
      - docker_network

  loki:
    image: grafana/loki:2.5.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki_data:/loki
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    restart: always
    networks:
      - docker_network
    environment:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  promtail:
    image: grafana/promtail:2.6.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: http://localhost:3100/api/prom/push
        loki-batch-size: "400"
        loki-retries: "2"
        loki-timeout: "1s"
        keep-file: "true"
        max-size: "1g"
    restart: always
    networks:
      - docker_network
    environment:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

networks:
  docker_network:
    external: true
